<!-- Product Popup -->
<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <span class="popup-close">&times;</span>
    <div class="popup-body"> 
      <h2 id="popup-title"></h2>
      <img id="popup-image" src="" alt="">
      <p id="popup-price"></p>
      <p id="popup-description"></p>

      <label for="popup-variant">Choose a variant:</label>
      <select id="popup-variant"></select>

      <button id="popup-add-to-cart">Add to Cart</button>
    </div>
  </div>
</div>

<!-- Product Grid -->
<div class="custom-grid">
  <div class="grid-wrapper">
    {% for i in (1..6) %}
      {% assign setting_id = "product_" | append: i %}
      {% assign product = all_products[section.settings[setting_id]] %}
      {% if product %}
        <div class="grid-item" data-handle="{{ product.handle }}">
          <div class="grid-img">
            <img src="{{ product.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ product.title }}">
          </div>
          <h3 class="grid-title">{{ product.title }}</h3>
          <p class="grid-price">{{ product.price | money }}</p>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

<!-- Styles -->
<style>
.custom-grid {
  padding: 40px 20px;
}
.grid-wrapper {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}
.grid-item {
  background: #fff;
  border-radius: 12px;
  padding: 15px;
  text-align: center;
  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.grid-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0,0,0,0.08);
}
.grid-img img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
  object-fit: cover;
  max-height: 250px;
}
.grid-title {
  font-size: 1rem;
  margin: 10px 0 5px;
}
.grid-price {
  font-size: 0.9rem;
  color: #555;
}

/* Popup Overlay */
.popup {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}
.popup.hidden {
  display: none;
}

/* Popup Content */
.popup-content {
  background: #fff;
  padding: 20px;
  border-radius: 10px;
  max-width: 500px;
  max-height: 90vh;
  overflow-y: auto;
  width: 100%;
  text-align: center;
  position: relative;
}
#product-popup img {
  max-width: 100%;
  max-height: 400px;
  object-fit: contain;
  margin-bottom: 15px;
}
.popup-close {
  position: absolute;
  top: 10px; right: 15px;
  font-size: 24px;
  cursor: pointer;
}

/* Popup Body */
.popup-body {
  display: flex;
  flex-direction: column;
  gap: 12px;
  align-items: center;
}
.popup-body h2 {
  font-size: 20px;
  margin-bottom: 10px;
}
.popup-body p {
  font-size: 14px;
  color: #555;
}

/* Variant Dropdown */
#popup-variant {
  width: 100%;
  padding: 10px 12px;
  margin: 15px 0;
  border: 1px solid #ddd;
  border-radius: 8px;
  font-size: 14px;
  background: #f9f9f9;
  transition: border-color 0.2s ease;
}
#popup-variant:focus {
  border-color: #333;
  outline: none;
  background: #fff;
}

/* Add to Cart Button */
#popup-add-to-cart {
  display: inline-block;
  width: 100%;
  padding: 14px;
  background: rgb(33, 229, 118);
  color: #fff;
  font-size: 16px;
  font-weight: 600;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 10px;
}
#popup-add-to-cart:hover {
  background: #333;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(103, 197, 94, 0.76);
}

/* Responsive */
@media screen and (max-width: 900px) {
  .grid-wrapper {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media screen and (max-width: 600px) {
  .grid-wrapper {
    grid-template-columns: 1fr;
  }
}
</style>



<script>
document.addEventListener("DOMContentLoaded", function() {
  const popup = document.getElementById("product-popup");
  const popupClose = document.querySelector(".popup-close");
  const popupTitle = document.getElementById("popup-title");
  const popupImage = document.getElementById("popup-image");
  const popupPrice = document.getElementById("popup-price");
  const popupDescription = document.getElementById("popup-description");
  const popupVariant = document.getElementById("popup-variant");
  const popupAddToCart = document.getElementById("popup-add-to-cart");

  // Handle grid item click
  document.querySelectorAll(".grid-item").forEach(item => {
    item.addEventListener("click", function() {
      const handle = this.getAttribute("data-handle");

      // Fetch product JSON by handle
      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          popupTitle.textContent = product.title;
          popupImage.src = product.images[0] || "";
          popupPrice.textContent = (product.price / 100).toLocaleString("en-US", {
            style: "currency",
            currency: "USD"
          });
          popupDescription.textContent = product.description;

          // Populate variants
          popupVariant.innerHTML = "";
          product.variants.forEach(variant => {
            let option = document.createElement("option");
            option.value = variant.id;
            option.textContent = variant.title + " - " + (variant.price / 100).toLocaleString("en-US", {
              style: "currency",
              currency: "USD"
            });
            popupVariant.appendChild(option);
          });

          popup.classList.remove("hidden");

          // Add to Cart
          popupAddToCart.onclick = function() {
            const variantId = popupVariant.value;
            fetch("/cart/add.js", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ id: variantId, quantity: 1 })
            })
              .then(res => res.json())
              .then(data => {
                alert("Added to cart: " + data.title);
                popup.classList.add("hidden");
              })
              .catch(err => console.error(err));
          };
        });
    });
  });

  // Close popup
  popupClose.addEventListener("click", () => popup.classList.add("hidden"));
  popup.addEventListener("click", e => {
    if (e.target === popup) popup.classList.add("hidden");
  });
});
</script>


{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [
    {
      "type": "product",
      "id": "product_1",
      "label": "Product 1"
    },
    {
      "type": "product",
      "id": "product_2",
      "label": "Product 2"
    },
    {
      "type": "product",
      "id": "product_3",
      "label": "Product 3"
    },
    {
      "type": "product",
      "id": "product_4",
      "label": "Product 4"
    },
    {
      "type": "product",
      "id": "product_5",
      "label": "Product 5"
    },
    {
      "type": "product",
      "id": "product_6",
      "label": "Product 6"
    }
  ],
  "presets": [
    {
      "name": "Custom Product Grid",
      "category": "Custom"
    }
  ]
}


{% endschema %}