<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <span class="popup-close">×</span>
    
    <div class="popup-top">
      <div class="popup-image">
        <img id="popup-image" src="" alt="">
      </div>

      <div class="popup-details">
        <h2 id="popup-title">Tennis Blue T-Shirt</h2>
        <p id="popup-price">980,00€</p>
        <p id="popup-description">This one-piece swimsuit is crafted from jersey featuring an allover micro Monogram motif in relief.</p>
      </div>
    </div>

    <div class="popup-actions">
      <label class="color-label">Color</label>
      <div id="popup-colors" class="color-container">
        <div class="color-box" style="--square-color: #808080">
          <span>Grey</span>
        </div>
        <div class="color-box selected" style="--square-color: #000000">
          <span>Black</span>
        </div>
      </div>

      <label for="popup-variant">Size</label>
      <select id="popup-variant">
        <option value="">Choose your size</option>
        <option value="S">S</option>
        <option value="M">M</option>
        <option value="L">L</option>
      </select>

      <button id="popup-add-to-cart">ADD TO CART →</button>
    </div>
  </div>
</div>

<style>
  /* ===== ORIGINAL GRID STYLES (UNTOUCHED) ===== */
  .custom-grid {
    padding: 40px 20px;
  }
  .grid-wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
  }
  .grid-item {
    background: #fff;
    border-radius: 12px;
    padding: 15px;
    text-align: center;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  .grid-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0,0,0,0.08);
  }
  .grid-img img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    object-fit: cover;
    max-height: 250px;
  }
  .grid-title {
    font-size: 1rem;
    margin: 10px 0 5px;
  }
  .grid-price {
    font-size: 0.9rem;
    color: #555;
  }
  @media screen and (max-width: 900px) {
    .grid-wrapper {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  @media screen and (max-width: 600px) {
    .grid-wrapper {
      grid-template-columns: 1fr;
    }
  }

  /* ===== EXACT POPUP STYLES FROM IMAGE ===== */
  .popup {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    padding: 20px;
  }
  .popup.hidden {
    display: none;
  }
  .popup-content {
    background: #fff;
    width: 90%;
    max-width: 600px;
    padding: 30px;
    position: relative;
    border-radius: 0;
    max-height: 90vh;
    overflow-y: auto;
    font-family: Arial, sans-serif;
  }
  .popup-close {
    position: absolute;
    top: 20px;
    right: 20px;
    font-size: 24px;
    cursor: pointer;
    line-height: 1;
    color: #000;
  }
  .popup-top {
    display: flex;
    gap: 30px;
    margin-bottom: 30px;
  }
  .popup-image {
    flex: 1;
    min-width: 0;
  }
  .popup-image img {
    width: 100%;
    height: auto;
    max-height: 400px;
    object-fit: contain;
  }
  .popup-details {
    flex: 1;
    min-width: 0;
  }
  .popup-details h2 {
    font-size: 24px;
    margin: 0 0 15px 0;
    font-weight: normal;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  #popup-price {
    font-size: 16px;
    margin: 0 0 20px 0;
    color: #000;
  }
  .popup-details p {
    font-size: 14px;
    color: #555;
    margin: 0;
    line-height: 1.5;
  }
  .popup-actions {
    display: flex;
    flex-direction: column;
    gap: 15px;
    border-top: 1px solid #eee;
    padding-top: 20px;
  }
  .color-label, 
  .popup-actions label {
    font-size: 14px;
    margin-bottom: 10px;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: #000;
  }
  .color-container {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
  }
  .color-box {
    display: flex;
    align-items: center;
    width: 100%;
    max-width: 120px;
    height: 40px;
    background: white;
    border: 1px solid #ddd;
    cursor: pointer;
    border-radius: 0;
    padding-left: 15px;
    position: relative;
    font-size: 14px;
  }
  .color-box::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 5px;
    height: 100%;
    background-color: var(--square-color, #ccc);
  }
  .color-box.selected {
    background: #f5f5f5;
    color: #000;
    border-color: #000;
  }
  #popup-variant {
    width: 100%;
    max-width: 200px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 0;
    font-size: 14px;
    margin-bottom: 20px;
    background: #fff;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 15px;
  }
  #popup-add-to-cart {
    width: 100%;
    max-width: 200px;
    padding: 12px;
    background: #000;
    color: white;
    font-size: 14px;
    border: none;
    border-radius: 0;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 1px;
    transition: opacity 0.3s ease;
  }
  #popup-add-to-cart:hover {
    opacity: 0.9;
  }

  /* ===== RESPONSIVE ADJUSTMENTS ===== */
  @media screen and (max-width: 768px) {
    .popup-top {
      flex-direction: column;
      gap: 20px;
    }
    .popup-content {
      padding: 25px;
    }
    .popup-details h2 {
      font-size: 20px;
    }
  }
  @media screen and (max-width: 480px) {
    .popup-content {
      padding: 20px;
    }
    .popup-close {
      top: 15px;
      right: 15px;
    }
    .color-container {
      flex-direction: column;
    }
    .color-box {
      max-width: 100%;
    }
    #popup-variant,
    #popup-add-to-cart {
      max-width: 100%;
    }
  }
</style>


<script>
document.addEventListener("DOMContentLoaded", function() {
  const popup = document.getElementById("product-popup");
  const popupClose = document.querySelector(".popup-close");
  const popupTitle = document.getElementById("popup-title");
  const popupImage = document.getElementById("popup-image");
  const popupPrice = document.getElementById("popup-price");
  const popupDescription = document.getElementById("popup-description");
  const popupVariant = document.getElementById("popup-variant");
  const popupAddToCart = document.getElementById("popup-add-to-cart");
  const popupColors = document.getElementById("popup-colors");

  document.querySelectorAll(".grid-item").forEach(item => {
    item.addEventListener("click", function() {
      const handle = this.dataset.handle;

      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          popupTitle.textContent = product.title;
          popupImage.src = product.images[0] || "";
          popupPrice.textContent = (product.price / 100).toLocaleString("en-US", { style: "currency", currency: "EUR" });
          popupDescription.textContent = product.description;

          // --- Populate sizes ---
          popupVariant.innerHTML = `<option value="">Choose your size</option>`;
          product.variants.forEach(v => {
            const opt = document.createElement("option");
            opt.value = v.id;
            opt.textContent = v.option1;
            popupVariant.appendChild(opt);
          });

          // --- Populate colors ---
          popupColors.innerHTML = "";
          const colors = [...new Set(product.variants.map(v => v.option2))]; // unique colors

       colors.forEach(color => {
  const box = document.createElement("div");
  box.className = "color-box";
  box.style.setProperty("--square-color", color.toLowerCase());

  const label = document.createElement("span");
  label.textContent = color;
  box.appendChild(label);

  box.addEventListener("click", () => {
    document.querySelectorAll(".color-box").forEach(b => b.classList.remove("selected"));
    box.classList.add("selected");

    // filter sizes
    popupVariant.innerHTML = `<option value="">Choose your size</option>`;
    product.variants
      .filter(v => v.option2 === color)
      .forEach(v => {
        const opt = document.createElement("option");
        opt.value = v.id;
        opt.textContent = v.option1;
        popupVariant.appendChild(opt);
      });
  });

  popupColors.appendChild(box);
});



          // auto-select first color
          {% comment %} if (popupColors.firstChild) popupColors.firstChild.click(); {% endcomment %}

          popup.classList.remove("hidden");
        });
    });
  });

  // Add to cart
  popupAddToCart.addEventListener("click", () => {
    const variantId = popupVariant.value;
    if(!variantId) return alert("Please select a size.");

    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    })
    .then(res => res.json())
    .then(data => {
      alert("Added to cart: " + data.title);
      popup.classList.add("hidden");
    })
    .catch(err => console.error(err));
  });

  // Close popup
  popupClose.addEventListener("click", () => popup.classList.add("hidden"));
  popup.addEventListener("click", e => { if(e.target === popup) popup.classList.add("hidden"); });
});
</script>


{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [
    {
      "type": "product",
      "id": "product_1",
      "label": "Product 1"
    },
    {
      "type": "product",
      "id": "product_2",
      "label": "Product 2"
    },
    {
      "type": "product",
      "id": "product_3",
      "label": "Product 3"
    },
    {
      "type": "product",
      "id": "product_4",
      "label": "Product 4"
    },
    {
      "type": "product",
      "id": "product_5",
      "label": "Product 5"
    },
    {
      "type": "product",
      "id": "product_6",
      "label": "Product 6"
    }
  ],
  "presets": [
    {
      "name": "Custom Product Grid",
      "category": "Custom"
    }
  ]
}


{% endschema %}