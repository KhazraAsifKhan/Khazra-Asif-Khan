<div class="modal-overlay">
  <div class="product-modal">
    <button class="close-btn">×</button>
    
    <div class="modal-content">
      <div class="product-image">
        <img src="https://csspicker.dev/api/image/?q=tennis+blue+shirt&image_type=photo" alt="Tennis Blue T-Shirt">
      </div>
      
      <div class="product-details">
        <h2 class="product-title">Tennis Blue T-Shirt</h2>
        <p class="product-price">980,00€</p>
        <p class="product-description">
          This one-piece swimsuit is crafted from jersey featuring an allover micro Monogram motif in relief.
        </p>
        
        <div class="color-section">
          <label class="section-label">Color</label>
          <div class="color-options">
            <button class="color-option selected">Grey</button>
            <button class="color-option">Black</button>
          </div>
        </div>
        
        <div class="size-section">
          <label class="section-label">Size</label>
          <div class="size-dropdown">
            <select class="size-select">
              <option>Choose your size</option>
              <option>XS</option>
              <option>S</option>
              <option>M</option>
              <option>L</option>
              <option>XL</option>
            </select>
          </div>
        </div>
        
        <button class="add-to-cart-btn">
          ADD TO CART
          <span class="arrow">→</span>
        </button>
      </div>
    </div>
  </div>
</div>

<style>
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.product-modal {
  background: white;
  border: 3px solid #2196F3;
  border-radius: 8px;
  width: 600px;
  max-width: 90vw;
  position: relative;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
}

.close-btn {
  position: absolute;
  top: 15px;
  right: 20px;
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: #666;
  z-index: 10;
}

.close-btn:hover {
  color: #000;
}

.modal-content {
  display: flex;
  padding: 20px;
  gap: 20px;
}

.product-image {
  flex: 1;
}

.product-image img {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: 4px;
}

.product-details {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.product-title {
  font-size: 24px;
  font-weight: 300;
  margin: 0;
  color: #333;
}

.product-price {
  font-size: 20px;
  font-weight: 500;
  margin: 0;
  color: #000;
}

.product-description {
  font-size: 14px;
  line-height: 1.4;
  color: #666;
  margin: 0;
}

.section-label {
  font-size: 16px;
  font-weight: 500;
  color: #333;
  margin-bottom: 8px;
  display: block;
}

.color-options {
  display: flex;
  gap: 0;
}

.color-option {
  flex: 1;
  padding: 12px 20px;
  border: 2px solid #ddd;
  background: white;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.2s;
}

.color-option:first-child {
  border-right: 1px solid #ddd;
}

.color-option.selected {
  background: #f5f5f5;
  border-color: #999;
}

.color-option:hover {
  background: #f0f0f0;
}

.size-dropdown {
  position: relative;
}

.size-select {
  width: 100%;
  padding: 12px 15px;
  border: 2px solid #ddd;
  background: white;
  font-size: 14px;
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 12px center;
  background-repeat: no-repeat;
  background-size: 16px;
}

.size-select:focus {
  outline: none;
  border-color: #2196F3;
}

.add-to-cart-btn {
  background: #000;
  color: white;
  border: none;
  padding: 15px 30px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  margin-top: 10px;
  transition: background-color 0.2s;
}

.add-to-cart-btn:hover {
  background: #333;
}

.arrow {
  font-size: 16px;
}

@media (max-width: 768px) {
  .modal-content {
    flex-direction: column;
  }
  
  .product-modal {
    width: 95vw;
    margin: 20px;
  }
}
</style>



<script>
document.addEventListener("DOMContentLoaded", function() {
  const popup = document.getElementById("product-popup");
  const popupClose = document.querySelector(".popup-close");
  const popupTitle = document.getElementById("popup-title");
  const popupImage = document.getElementById("popup-image");
  const popupPrice = document.getElementById("popup-price");
  const popupDescription = document.getElementById("popup-description");
  const popupVariant = document.getElementById("popup-variant");
  const popupAddToCart = document.getElementById("popup-add-to-cart");
  const popupColors = document.getElementById("popup-colors");

  document.querySelectorAll(".grid-item").forEach(item => {
    item.addEventListener("click", function() {
      const handle = this.dataset.handle;

      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          popupTitle.textContent = product.title;
          popupImage.src = product.images[0] || "";
          popupPrice.textContent = (product.price / 100).toLocaleString("en-US", { style: "currency", currency: "EUR" });
          popupDescription.textContent = product.description;

          // --- Populate sizes ---
          popupVariant.innerHTML = `<option value="">Choose your size</option>`;
          product.variants.forEach(v => {
            const opt = document.createElement("option");
            opt.value = v.id;
            opt.textContent = v.option1;
            popupVariant.appendChild(opt);
          });

          // --- Populate colors ---
          popupColors.innerHTML = "";
          const colors = [...new Set(product.variants.map(v => v.option2))]; // unique colors

       colors.forEach(color => {
  const box = document.createElement("div");
  box.className = "color-box";
  box.style.setProperty("--square-color", color.toLowerCase());

  const label = document.createElement("span");
  label.textContent = color;
  box.appendChild(label);

  box.addEventListener("click", () => {
    document.querySelectorAll(".color-box").forEach(b => b.classList.remove("selected"));
    box.classList.add("selected");

    // filter sizes
    popupVariant.innerHTML = `<option value="">Choose your size</option>`;
    product.variants
      .filter(v => v.option2 === color)
      .forEach(v => {
        const opt = document.createElement("option");
        opt.value = v.id;
        opt.textContent = v.option1;
        popupVariant.appendChild(opt);
      });
  });

  popupColors.appendChild(box);
});



          // auto-select first color
          {% comment %} if (popupColors.firstChild) popupColors.firstChild.click(); {% endcomment %}

          popup.classList.remove("hidden");
        });
    });
  });

  // Add to cart
  popupAddToCart.addEventListener("click", () => {
    const variantId = popupVariant.value;
    if(!variantId) return alert("Please select a size.");

    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    })
    .then(res => res.json())
    .then(data => {
      alert("Added to cart: " + data.title);
      popup.classList.add("hidden");
    })
    .catch(err => console.error(err));
  });

  // Close popup
  popupClose.addEventListener("click", () => popup.classList.add("hidden"));
  popup.addEventListener("click", e => { if(e.target === popup) popup.classList.add("hidden"); });
});
</script>


{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [
    {
      "type": "product",
      "id": "product_1",
      "label": "Product 1"
    },
    {
      "type": "product",
      "id": "product_2",
      "label": "Product 2"
    },
    {
      "type": "product",
      "id": "product_3",
      "label": "Product 3"
    },
    {
      "type": "product",
      "id": "product_4",
      "label": "Product 4"
    },
    {
      "type": "product",
      "id": "product_5",
      "label": "Product 5"
    },
    {
      "type": "product",
      "id": "product_6",
      "label": "Product 6"
    }
  ],
  "presets": [
    {
      "name": "Custom Product Grid",
      "category": "Custom"
    }
  ]
}


{% endschema %}